{"extracted_information": "The web content details how to declare permissions for Chrome extensions in Manifest V3, covering various permission types, security considerations, and API access requirements.", "specifications": {"manifest_version": 3}, "pricing": {}, "features": [{"name": "Permission Categories", "details": "Extensions can request permissions using specific manifest keys for various functionalities.", "types": [{"key": "\"permissions\"", "description": "Contains items from a list of known strings. Changes may trigger a warning.", "usage_example": ["activeTab", "contextMenus", "storage"]}, {"key": "\"optional_permissions\"", "description": "Granted by the user at runtime, instead of at install time.", "usage_example": ["topSites"]}, {"key": "\"content_scripts.matches\"", "description": "Contains one or more match patterns that allow content scripts to inject into one or more hosts. Changes may trigger a warning.", "usage_example": []}, {"key": "\"host_permissions\"", "description": "Contains one or more match patterns that give access to one or more hosts. Changes may trigger a warning.", "usage_example": ["https://www.developer.chrome.com/*"]}, {"key": "\"optional_host_permissions\"", "description": "Granted by the user at runtime, instead of at install time.", "usage_example": ["https://*/*", "http://*/*"]}]}, {"name": "Host Permissions", "details": "Allow extensions to interact with URLs matching specified patterns. Required by some Chrome APIs in addition to their own API permissions.", "api_access_examples": ["Make `fetch()` requests from the extension service worker and extension pages.", "Read and query sensitive `tab` properties (`url`, `title`, `favIconUrl`) using the `chrome.tabs` API.", "Inject a content script programmatically.", "Monitor and control network requests with the `chrome.webRequest` API.", "Access cookies with the `chrome.cookies` API.", "Redirect and modify requests and response headers using `chrome.declarativeNetRequest` API."]}, {"name": "API Access Requirements", "details": "Specific APIs require declared permissions. Documentation for each API explains its permission requirements. For example, Storage API documentation details how to declare its permission.", "specific_access_cases": [{"case": "Access to `file://` URLs and incognito mode", "requirement": "Users must explicitly give the extension access on its details page.", "detection_methods": ["`extension.isAllowedIncognitoAccess()`", "`extension.isAllowedFileSchemeAccess()`"]}]}], "statistics": {}, "temporal_info": {"last_updated": "2024-02-05 UTC"}, "geographical_data": {}, "references": [{"type": "API Documentation", "name": "Chrome Extensions API reference", "url": "/docs/extensions/reference/api"}, {"type": "Permission List", "name": "Permissions list", "url": "/docs/extensions/reference/permissions-list"}, {"type": "Optional Permissions API", "name": "Permissions API (optional permissions)", "url": "/docs/extensions/reference/api/permissions"}, {"type": "Content Scripts", "name": "Content scripts documentation", "url": "/docs/extensions/develop/concepts/content-scripts#static-declarative"}, {"type": "Match Patterns", "name": "Match patterns documentation", "url": "/docs/extensions/develop/concepts/match-patterns"}, {"type": "Storage API", "name": "Storage API documentation", "url": "/docs/extensions/reference/api/storage"}, {"type": "Manifest File", "name": "Manifest documentation", "url": "/docs/extensions/reference/manifest"}, {"type": "Fetch API", "name": "Using Fetch (MDN)", "url": "https://developer.mozilla.org/docs/Web/API/Fetch_API/Using_Fetch"}, {"type": "Tabs API", "name": "chrome.tabs API", "url": "/docs/extensions/reference/api/tabs"}, {"type": "WebRequest API", "name": "chrome.webRequest API", "url": "/docs/extensions/reference/api/webRequest"}, {"type": "Cookies API", "name": "chrome.cookies API", "url": "/docs/extensions/reference/api/cookies"}, {"type": "DeclarativeNetRequest API", "name": "chrome.declarativeNetRequest API", "url": "/docs/extensions/reference/api/declarativeNetRequest"}, {"type": "Permission Warnings Guidelines", "name": "Permission warnings guidelines", "url": "/docs/extensions/develop/concepts/permission-warnings"}, {"type": "Updating Permissions", "name": "Updating permissions section", "url": "/docs/extensions/develop/concepts/permission-warnings#update_permissions"}, {"type": "Manage Extensions", "name": "Manage your extensions (Chrome Web Store Help)", "url": "https://support.google.com/chrome_webstore/answer/2664769#:~:text=Manage%20your%20extensions"}, {"type": "Extension API Method", "name": "extension.isAllowedIncognitoAccess()", "url": "/docs/extensions/reference/api/extension#method-isAllowedIncognitoAccess"}, {"type": "Extension API Method", "name": "extension.isAllowedFileSchemeAccess()", "url": "/docs/extensions/reference/api/extension#method-isAllowedFileSchemeAccess"}, {"type": "Licensing", "name": "Creative Commons Attribution 4.0 License", "url": "https://creativecommons.org/licenses/by/4.0/"}, {"type": "Licensing", "name": "Apache 2.0 License", "url": "https://www.apache.org/licenses/LICENSE-2.0"}, {"type": "Policy", "name": "Google Developers Site Policies", "url": "https://developers.google.com/site-policies"}], "security_considerations": {"damage_limitation": "Permissions help to limit damage if your extension is compromised by malware.", "user_consent_warnings": "Some permission warnings are displayed to users for their consent before installation or at runtime.", "optional_permissions_benefit": "Consider using optional permissions wherever possible to provide users with informed control over access to resources and data, and to potentially reduce alarming warnings.", "warning_triggers": "Adding or changing match patterns in `\"host_permissions\"` and `\"content_scripts.matches\"` fields of the manifest file will trigger a warning.", "user_trust": "Users are more likely to trust an extension with limited warnings or when permissions are explained to them. Best practices for warnings are available in the 'Permission warnings guidelines'."}}